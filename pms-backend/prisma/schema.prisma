// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id                    Int              @id @default(autoincrement())
  name                  String
  email                 String           @unique
  riskProfile           String
  investmentObjectives  String?          // New field for CRM
  notes                 String?          // New field for general notes
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt
  portfolios            Portfolio[]
  interactionLogs       InteractionLog[] // Relation to interaction logs
}

model Portfolio {
  id            Int           @id @default(autoincrement())
  name          String
  description   String?
  clientId      Int
  client        Client        @relation(fields: [clientId], references: [id])
  benchmarkId   Int?
  benchmark     Benchmark?    @relation(fields: [benchmarkId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  transactions  Transaction[]
}

model Transaction {
  id              Int            @id @default(autoincrement())
  portfolioId     Int
  portfolio       Portfolio      @relation(fields: [portfolioId], references: [id])
  type            TransactionType
  assetType       AssetType
  symbol          String?
  quantity        Float?
  price           Float?
  amount          Float
  transactionDate DateTime
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Benchmark {
  id           Int                     @id @default(autoincrement())
  name         String                  @unique
  description  String?
  portfolios   Portfolio[]
  priceHistory BenchmarkPriceHistory[]
}

model BenchmarkPriceHistory {
  id          Int       @id @default(autoincrement())
  benchmarkId Int
  benchmark   Benchmark @relation(fields: [benchmarkId], references: [id])
  date        DateTime  @db.Date
  price       Float
  createdAt   DateTime  @default(now())

  @@unique([benchmarkId, date])
}

// New model for CRM Interaction Logs
model InteractionLog {
  id          Int      @id @default(autoincrement())
  clientId    Int
  client      Client   @relation(fields: [clientId], references: [id])
  date        DateTime
  type        String   // e.g., "Meeting", "Call", "Email"
  summary     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum TransactionType {
  BUY
  SELL
  DIVIDEND
  INTEREST
  CASH_DEPOSIT
  CASH_WITHDRAWAL
  FEES
}

enum AssetType {
  STOCK
  FOREX
  CASH
}
